From ab4f1e39e8607291f2ad00eda2559d5542ef1fad Mon Sep 17 00:00:00 2001
From: aroflcoppter <contact@dankium.ca>
Date: Fri, 13 Jun 2025 10:26:46 -0230
Subject: [PATCH] Disable safe browsing download bubble

---
 .../bubble/download_bubble_contents_view.cc   | 83 -------------------
 .../ui/views/download/download_item_view.cc   | 25 ------
 third_party/angle                             |  2 +-
 third_party/libunwind/src                     |  2 +-
 4 files changed, 2 insertions(+), 110 deletions(-)

diff --git a/chrome/browser/ui/views/download/bubble/download_bubble_contents_view.cc b/chrome/browser/ui/views/download/bubble/download_bubble_contents_view.cc
index 50bbec0c496a1..624ae875ddc48 100644
--- a/chrome/browser/ui/views/download/bubble/download_bubble_contents_view.cc
+++ b/chrome/browser/ui/views/download/bubble/download_bubble_contents_view.cc
@@ -32,31 +32,8 @@
 #include "ui/views/view.h"
 #include "ui/views/view_class_properties.h"
 
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-#include "chrome/browser/safe_browsing/download_protection/download_protection_service.h"
-#include "chrome/browser/safe_browsing/safe_browsing_service.h"
-#endif
-
 using offline_items_collection::ContentId;
 
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-namespace {
-
-void MaybeSendDownloadReport(content::BrowserContext* browser_context,
-                             download::DownloadItem* download) {
-  if (safe_browsing::SafeBrowsingService* service =
-          g_browser_process->safe_browsing_service()) {
-    service->SendDownloadReport(download,
-                                safe_browsing::ClientSafeBrowsingReportRequest::
-                                    DANGEROUS_DOWNLOAD_RECOVERY,
-                                /*did_proceed=*/true,
-                                /*show_download_in_folder=*/std::nullopt);
-  }
-}
-
-}  // namespace
-#endif
-
 DownloadBubbleContentsView::DownloadBubbleContentsView(
     base::WeakPtr<Browser> browser,
     base::WeakPtr<DownloadBubbleUIController> bubble_controller,
@@ -188,81 +165,21 @@ void DownloadBubbleContentsView::ProcessDeepScanPress(
     DownloadItemWarningData::DeepScanTrigger trigger,
     base::optional_ref<const std::string> password) {
   if (DownloadUIModel* model = GetDownloadModel(id); model) {
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-    LogDeepScanEvent(model->GetDownloadItem(),
-                     safe_browsing::DeepScanEvent::kPromptAccepted);
-#endif
     DownloadItemWarningData::AddWarningActionEvent(
         model->GetDownloadItem(),
         DownloadItemWarningData::WarningSurface::BUBBLE_SUBPAGE,
         DownloadItemWarningData::WarningAction::ACCEPT_DEEP_SCAN);
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-    safe_browsing::DownloadProtectionService::UploadForConsumerDeepScanning(
-        model->GetDownloadItem(), trigger, password);
-#endif
   }
 }
 
 void DownloadBubbleContentsView::ProcessLocalDecryptionPress(
     const offline_items_collection::ContentId& id,
     base::optional_ref<const std::string> password) {
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-  if (DownloadUIModel* model = GetDownloadModel(id); model) {
-    LogLocalDecryptionEvent(safe_browsing::DeepScanEvent::kPromptAccepted);
-    safe_browsing::DownloadProtectionService::CheckDownloadWithLocalDecryption(
-        model->GetDownloadItem(), password);
-  }
-#endif
 }
 
 void DownloadBubbleContentsView::ProcessLocalPasswordInProgressClick(
     const offline_items_collection::ContentId& id,
     DownloadCommands::Command command) {
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-  DownloadUIModel* model = GetDownloadModel(id);
-  if (!model) {
-    return;
-  }
-
-  download::DownloadItem* item = model->GetDownloadItem();
-  safe_browsing::SafeBrowsingService* sb_service =
-      g_browser_process->safe_browsing_service();
-  if (!sb_service) {
-    return;
-  }
-
-  safe_browsing::DownloadProtectionService* protection_service =
-      sb_service->download_protection_service();
-  if (!protection_service) {
-    return;
-  }
-
-  protection_service->CancelChecksForDownload(item);
-
-  content::BrowserContext* browser_context =
-      content::DownloadItemUtils::GetBrowserContext(item);
-  DownloadCoreService* download_core_service =
-      DownloadCoreServiceFactory::GetForBrowserContext(browser_context);
-
-  DCHECK(download_core_service);
-  ChromeDownloadManagerDelegate* delegate =
-      download_core_service->GetDownloadManagerDelegate();
-  DCHECK(delegate);
-
-  if (command == DownloadCommands::CANCEL) {
-    LogLocalDecryptionEvent(safe_browsing::DeepScanEvent::kScanCanceled);
-    delegate->CheckClientDownloadDone(
-        item->GetId(),
-        safe_browsing::DownloadCheckResult::PROMPT_FOR_LOCAL_PASSWORD_SCANNING);
-  } else if (command == DownloadCommands::BYPASS_DEEP_SCANNING) {
-    LogLocalDecryptionEvent(safe_browsing::DeepScanEvent::kPromptBypassed);
-    MaybeSendDownloadReport(browser_context, item);
-    delegate->CheckClientDownloadDone(
-        item->GetId(), safe_browsing::DownloadCheckResult::UNKNOWN);
-  } else {
-    NOTREACHED() << "Unexpected command: " << static_cast<int>(command);
-  }
-#endif
 }
 
 bool DownloadBubbleContentsView::IsEncryptedArchive(const ContentId& id) {
diff --git a/chrome/browser/ui/views/download/download_item_view.cc b/chrome/browser/ui/views/download/download_item_view.cc
index 42706748b2d50..8c19801a365af 100644
--- a/chrome/browser/ui/views/download/download_item_view.cc
+++ b/chrome/browser/ui/views/download/download_item_view.cc
@@ -103,11 +103,6 @@
 #include "url/gurl.h"
 #include "url/url_constants.h"
 
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-#include "chrome/browser/safe_browsing/download_protection/download_protection_service.h"
-#include "chrome/browser/safe_browsing/safe_browsing_service.h"
-#endif
-
 namespace {
 
 // TODO(pkasting): Replace bespoke constants in file with standard metrics from
@@ -832,23 +827,6 @@ void DownloadItemView::UpdateLabels() {
     warning_label_->SizeToFit(GetLabelWidth(*warning_label_));
   }
 
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-  deep_scanning_label_->SetVisible(mode_ ==
-                                   download::DownloadItemMode::kDeepScanning);
-  if (deep_scanning_label_->GetVisible()) {
-    const int id = (model_->GetDownloadItem() &&
-                    safe_browsing::ShouldUploadBinaryForDeepScanning(
-                        model_->GetDownloadItem()))
-                       ? IDS_PROMPT_DEEP_SCANNING_DOWNLOAD
-                       : IDS_PROMPT_DEEP_SCANNING_APP_DOWNLOAD;
-    const std::u16string filename = ElidedFilename(*deep_scanning_label_);
-    size_t filename_offset;
-    deep_scanning_label_->SetText(
-        l10n_util::GetStringFUTF16(id, filename, &filename_offset));
-    StyleFilename(*deep_scanning_label_, filename_offset, filename.length());
-    deep_scanning_label_->SizeToFit(GetLabelWidth(*deep_scanning_label_));
-  }
-#endif
 }
 
 void DownloadItemView::UpdateButtons() {
@@ -1319,9 +1297,6 @@ void DownloadItemView::ShowContextMenuImpl(
 }
 
 void DownloadItemView::OpenDownloadDuringAsyncScanning() {
-#if BUILDFLAG(SAFE_BROWSING_AVAILABLE)
-  model_->CompleteSafeBrowsingScan();
-#endif
   model_->SetOpenWhenComplete(true);
 }
 
diff --git a/third_party/angle b/third_party/angle
index d1fb74c940fef..23790f24506fe 160000
--- a/third_party/angle
+++ b/third_party/angle
@@ -1 +1 @@
-Subproject commit d1fb74c940fef262809f4a513039b70e94c91440
+Subproject commit 23790f24506fe76481ef81c98c67e8ecdee74e74
diff --git a/third_party/libunwind/src b/third_party/libunwind/src
index 8575f4ae4fcf8..4c6edb2651e2d 160000
--- a/third_party/libunwind/src
+++ b/third_party/libunwind/src
@@ -1 +1 @@
-Subproject commit 8575f4ae4fcf8892938bd9766cf1a5c90a0ed04e
+Subproject commit 4c6edb2651e2db1b0f2f6070cdc7dfc86893ec32
-- 
2.43.0

